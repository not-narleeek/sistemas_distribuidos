version: '3.8'

services:
  mongo:
    image: mongo:6.0
    container_name: mongo_yahoo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: on-failure

  init-mongo:
    build:
      context: ./mongo-init
      dockerfile: Dockerfile
    depends_on:
      - mongo
    networks:
      - default
    environment:
      MONGO_INITDB_HOST: mongo
      MONGO_INITDB_PORT: 27017
      MONGO_INITDB_DATABASE: yahoo_db
      MONGO_INITDB_COLLECTION: questions
    restart: "no"

  cache:
    build: ./cache
    container_name: cache
    ports:
      - "5000:5000"
    environment:
      CACHE_POLICY: ${CACHE_POLICY:-lru}
      CACHE_SIZE: ${CACHE_SIZE:-500}
      CACHE_TTL: ${CACHE_TTL:-300}
    command:
      [
        "--policy",
        "${CACHE_POLICY:-lru}",
        "--size",
        "${CACHE_SIZE:-500}",
        "--ttl",
        "${CACHE_TTL:-300}",
        "--mongo",
        "mongodb://mongo:27017/",
        "--db",
        "yahoo_db",
        "--coll",
        "questions",
        "--dummy_host",
        "llm",
        "--dummy_port",
        "6000",
        "--score_host",
        "score",
        "--score_port",
        "7000",
        "--storage_host",
        "storage",
        "--storage_port",
        "7100",
      ]
    depends_on:
      - mongo
      - llm
      - score
      - storage

  generador:
    build: ./generador
    container_name: generador_yahoo
    environment:
      CACHE_POLICY: ${CACHE_POLICY:-lru}
      CACHE_SIZE: ${CACHE_SIZE:-500}
      CACHE_TTL: ${CACHE_TTL:-300}
      GENERATOR_OUTPUT_DIR: ${GENERATOR_OUTPUT_DIR:-data_collected}
    command:
      [
        "--dist",
        "uniform",
        "--n",
        "8000",
        "--mongo",
        "mongodb://mongo:27017/",
        "--db",
        "yahoo_db",
        "--coll",
        "questions",
        "--cache_host",
        "cache",
        "--cache_port",
        "5000",
        "--dataset_csv",
        "",
        "--output_dir",
        "${GENERATOR_OUTPUT_DIR:-data_collected}",
      ]
    depends_on:
      - cache
    volumes:
      - ./data_collected:/generador/data_collected

  llm:
    build: ./LLM
    container_name: dummy_LLM
    ports:
      - "6000:6000"
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY:-AIzaSyCwYSMz2UIO57xOnZZgW3vwetT3jjD581c}
      GEMINI_MODEL: ${GEMINI_MODEL:-gemini-1.5-flash}
      GEMINI_TIMEOUT: ${GEMINI_TIMEOUT:-15}
      GEMINI_RETRIES: ${GEMINI_RETRIES:-3}
      GEMINI_BACKOFF: ${GEMINI_BACKOFF:-2.0}
    depends_on:
      - mongo

  score:
    build: ./score_service
    container_name: score_service
    ports:
      - "7000:7000"
    depends_on:
      - mongo

  storage:
    build: ./storage_service
    container_name: storage_service
    ports:
      - "7100:7100"
    depends_on:
      - mongo

volumes:
  mongo_data:

networks:
  default:
    driver: bridge
